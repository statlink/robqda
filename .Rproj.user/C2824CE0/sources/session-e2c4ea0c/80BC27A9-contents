robqdaHD.cv <- function(x, ina, k = floor(n/2), nfolds = 10, quantile.used = floor((n + p + 1)/2), nsamp = "best",
                      folds = NULL, stratified = TRUE, seed = NULL) {

  ina <- as.numeric(ina)
  p <- dim(x)[2]
  nc <- max(ina) ## number of groups
  ng <- per <- numeric(nc)
  mesos <- matrix(nrow = nc, ncol = p)
  sk <- vector("list", nc)

  if ( is.null(folds) )  folds <- .makefolds(ina, nfolds = nfolds, stratified = stratified, seed = seed)
  nfolds <- length(folds)

  runtime <- proc.time()
  for ( vim in 1:nfolds ) {
    xtrain <- x[ -folds[[ vim ]], , drop = FALSE]   ## training sample
    xtest <- x[ folds[[ vim ]], , drop = FALSE]  ## test sample
    n <- dim(xtrain)[1]
    vec <- Rfast2::pca(xtrain, k = k)$vectors
    xtrain <- train %*% vec
    xtest <- xtest %*% vec

    id <- ina[ folds[[ vim ]] ] ## groups of test sample
    ida <- ina[ -folds[[ vim ]] ]  ## groups of training sample
    p <- dim(xtrain)[2]
    ta <- matrix(nrow = dim(xtest)[1], ncol = nc)

    for (i in 1:nc) {
      xi <- xtrain[id == i, ]
      mod <- MASS::cov.rob(xi, quantile.used = quantile.used, method = "mcd", nsamp = nsamp)
      ng[i] <- length(mod$best)
      mesos[i, ] <- mod$center
      sk[[ i ]] <- mod$cov
    }
    n <- sum(ng)
    ci <- 2 * log(ng / n)
    for (j in 1:nc)   ta[, j] <- ci[j] - log( det( sk[[ i ]] ) ) - Rfast::mahala( xtest, mesos[j, ], sk[[ i ]] )
    per[vim] <- mean( Rfast::rowMaxs(ta) == id)

  }
  runtime <- proc.time() - runtime

  percent <- mean(per)
  list(per = per, percent = percent, runtime = runtime)
}





